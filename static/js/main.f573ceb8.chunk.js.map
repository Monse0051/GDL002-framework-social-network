{"version":3,"sources":["Constants/routes.js","Components/IntroductionLoginPage.js","Components/LoginPage.js","Constants/config.js","Utils/utilities.js","Components/Navbar.js","Components/Post.js","Components/HomePage.js","Components/SignUpPage.js","Components/FriendsPage.js","Components/MyAccountPage.js","App.js","serviceWorker.js","index.js"],"names":["HOME_PAGE","Introduction","react_default","a","createElement","className","React","Component","INITIAL_STATE","email","password","error","LoginPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","firebase","auth","signInWithEmailAndPassword","then","setState","objectSpread","history","push","ROUTES","console","log","catch","preventDefault","onChange","defineProperty","target","name","value","_this$state2","isInvalid","IntroductionLoginPage","type","placeholder","disabled","message","react_router_dom","to","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initFirebase","database","apps","length","initializeApp","CONFIG","app","firestore","getPosts","filter","collection","where","argument","cmp","get","querySnapshoot","newPostList","forEach","doc","post","data","unshift","Navbar","signOut","onClick","onSignOut","Post","newMessage","likeCounter","likes","isDisabled","onClickLike","bind","assertThisInitialized","onDelete","onEdit","onSave","onChangePost","firebase_db","alert","date","toString","delete","deleteFunc","mail","msg","public","set","deleteBtn","editBtn","Date","toDateString","isEditable","rows","cols","defaultValue","HomePage","postList","postMessage","onPost","onSetPrivacity","_this2","posts","user","currentUser","today","now","src_Components_Navbar","map","Components_Post","key","username","passwordOne","passwordTwo","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpPage","createUserWithEmailAndPassword","code","onChangeCheckbox","checked","FriendsPage","MyAccountPage","onAuthStateChanged","id","index","findIndex","elemen","splice","_this3","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f573ceb8.chunk.js","sourcesContent":["export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME_PAGE = '/home';\r\nexport const FRIENDS_PAGE = '/friends';\r\nexport const MY_ACCOUNT_PAGE = '/myaccount';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_DETAILS = '/admin/:id';","import React from 'react'\r\n\r\nclass Introduction extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"introducton-text\">\r\n            <h1>Women Who Code</h1>\r\n            <p>This is a social network for women who are somehow \r\n                learning to develop and who want to share resources \r\n                and create a community, join us!</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Introduction;\r\n","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport * as ROUTES from '../Constants/routes';\r\nimport {Link} from \"react-router-dom\";\r\nimport Introduction from '../Components/IntroductionLoginPage';\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n  };\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firebase = firebase;\r\n\r\n        this.state = {...INITIAL_STATE};\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email, password } = this.state;\r\n        \r\n        this.firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\r\n            this.setState({ ...INITIAL_STATE });\r\n            this.props.history.push(ROUTES.HOME_PAGE);\r\n            console.log(\"DEBUG_MSG: authenticated!\");\r\n          })\r\n          .catch(error => {\r\n            this.setState({ error });\r\n            console.log(\"DEBUG_MSG: error to auth\");\r\n            console.log(error);\r\n          });\r\n    \r\n        event.preventDefault();\r\n      };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render(){\r\n        const { email, password, error } = this.state;\r\n\r\n        const isInvalid = password === '' || email === '';\r\n    \r\n      return (\r\n        <div className = \"conteiner\">\r\n        <div className = \"introduction-section\">\r\n        <Introduction></Introduction>\r\n        </div>\r\n        <div className=\"login-page\">\r\n          <div className=\"login-section\">\r\n            <form onSubmit={this.onSubmit} >\r\n              <input className = \"input-email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Email Address\"\r\n              />  \r\n              <input className = \"input-password\"\r\n                name=\"password\" \r\n                value={password}\r\n                onChange={this.onChange}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              /> <br></br>\r\n              <button className = \"signin-button\" disabled={isInvalid} type=\"submit\">\r\n                Sign In\r\n            </button>\r\n\r\n              {error && <p>{error.message}</p>}\r\n            </form>\r\n            <p>Don't you have an account?</p> \r\n              <Link className=\"singup-button\" to={ROUTES.SIGN_UP}>Sign up</Link>\r\n          </div>     \r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default LoginPage;"," // Your web app's Firebase configuration\r\n export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCmt7a6vfZ7MhNJyhcnxhjrhPbSQ_M68Wc\",\r\n    authDomain: \"react-social-network-85607.firebaseapp.com\",\r\n    databaseURL: \"https://react-social-network-85607.firebaseio.com\",\r\n    projectId: \"react-social-network-85607\",\r\n    storageBucket: \"react-social-network-85607.appspot.com\",\r\n    messagingSenderId: \"351547157737\",\r\n    appId: \"1:351547157737:web:cfd6714f5ee45501\"\r\n  };","import * as CONFIG from '../Constants/config';\r\n\r\n\r\nexport const initFirebase = (firebase, database) => {\r\n    // if firebase app not initialized, then initialize\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(CONFIG.firebaseConfig);\r\n    }\r\n    const app = firebase.app();\r\n    database = app.firestore();\r\n\r\n    return {firebase, database};\r\n};\r\n\r\nexport const getPosts = (firebase, database, filter) =>{\r\n\r\n    let postRef = database.collection(\"posts\");\r\n    let postQueryRef = postRef.where(filter.argument, filter.cmp, filter.value);\r\n\r\n    return postQueryRef.get().then(querySnapshoot => {\r\n        let newPostList = [];\r\n        querySnapshoot.forEach(doc => {\r\n            // adding post to a list\r\n            let post = doc.data();\r\n            console.log(\"DEBUG_MSG: post: \", post);\r\n            //let newPostList = this.state.postList;\r\n            newPostList.unshift(post);\r\n            //this.setState({ postList: newPostList });\r\n        });\r\n        return newPostList;\r\n    });\r\n\r\n};\r\n","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport * as ROUTES from '../Constants/routes'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    onSignOut() {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <h2 className=\"logo-link\">Women Who Code</h2>\r\n                <ul className=\"nav-views\">\r\n                    <li><Link className=\"nav-views__link\" to={ROUTES.HOME_PAGE}><i><ion-icon name=\"home\"></ion-icon></i></Link> </li>\r\n                    <li><Link className=\"nav-views__link\" to={ROUTES.FRIENDS_PAGE}><i><ion-icon name=\"contacts\"></ion-icon></i> </Link></li>\r\n                    <li><Link className=\"nav-views__link\" to={ROUTES.MY_ACCOUNT_PAGE}><i><ion-icon name=\"person\"></ion-icon></i> </Link></li>\r\n                    <li><Link className=\"nav-views__link\" to=\"/\" onClick={this.onSignOut}><i><ion-icon name=\"log-out\"></ion-icon></i></Link></li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport {initFirebase, getPosts} from '../Utils/utilities';\r\n\r\n\r\n\r\nclass Post extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.firebase = firebase;\r\n        this.database = null;\r\n        this.newMessage = \"\";\r\n        this.state = {likeCounter:this.props.likes, \r\n                        isDisabled:true};\r\n       \r\n        this.onClickLike = this.onClickLike.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);  \r\n        this.onEdit= this.onEdit.bind(this);\r\n        this.onSave = this.onSave.bind(this);  \r\n        this.onChangePost = this.onChangePost.bind(this);    \r\n    }\r\n\r\n    componentDidMount(){\r\n        const firebase_db = initFirebase(this.firebase, this.database);\r\n        this.firebase = firebase_db.firebase;\r\n        this.database = firebase_db.database;\r\n\r\n    }\r\n\r\n    onDelete(){\r\n        console.log(\"DEBUG_MSG: deleting...\")\r\n        alert(\"are you sure?\");\r\n        this.database.collection(\"posts\").doc(this.props.date.toString()).delete();\r\n        this.props.deleteFunc(this.props.date);\r\n    }\r\n\r\n    onClickLike(){\r\n        console.log(\"posteando...\");\r\n       \r\n        const post = {\r\n            mail: this.props.mail,\r\n            date: this.props.date,\r\n            message: this.props.msg,\r\n            public: this.props.public,\r\n            likes: this.state.likeCounter + 1\r\n        }\r\n        \r\n        \r\n        this.database.collection(\"posts\").doc(this.props.date.toString()).set(post)\r\n            console.log('then')\r\n            this.setState((state)=> {\r\n                return {likeCounter: state.likeCounter+1};\r\n\r\n            }); \r\n           \r\n    }\r\n\r\n    onEdit(){\r\n        console.log(\"editando...\")\r\n       this.setState({isDisabled: false});\r\n    }\r\n\r\n    onSave (){\r\n    \r\n        const post = {\r\n            mail: this.props.mail,\r\n            date: this.props.date,\r\n            message: this.newMessage,\r\n            public: this.props.public,\r\n            likes: this.state.likeCounter \r\n        }\r\n        \r\n        this.database.collection(\"posts\").doc(this.props.date.toString()).set(post);\r\n               \r\n        this.setState({isDisabled: true});\r\n    }\r\n\r\n    onChangePost(event){\r\n        this.newMessage= event.target.value;\r\n    }\r\n\r\n    render() {\r\n        let date = new Date(this.props.date).toDateString();\r\n        let deleteBtn;\r\n        let editBtn;\r\n        if (this.props.isEditable ) {\r\n            deleteBtn = <button className = \"button\" onClick={this.onDelete}><ion-icon name=\"trash\"></ion-icon></button>;\r\n            \r\n            if(this.state.isDisabled){\r\n                editBtn = <button className = \"button\" onClick={this.onEdit}><ion-icon name=\"create\"></ion-icon></button> \r\n            }\r\n            else{\r\n                editBtn = <button className = \"button\" onClick={this.onSave}><ion-icon name=\"save\"></ion-icon></button>;\r\n            }\r\n        }\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <p>{this.props.mail}</p>\r\n                <p>{date}</p>\r\n                <p><textarea rows=\"4\" cols=\"50\" onChange={this.onChangePost} defaultValue={this.props.msg} disabled={this.state.isDisabled}>\r\n                    </textarea>\r\n                </p>\r\n                <p>{this.state.likeCounter}</p>\r\n                <button className = \"button\" onClick={this.onClickLike}> <ion-icon name=\"heart\"></ion-icon></button>\r\n                {deleteBtn}\r\n                {editBtn}\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport {initFirebase, getPosts} from '../Utils/utilities';\r\nimport Navbar from '../Components/Navbar';\r\nimport Post from './Post';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firebase = firebase;\r\n        this.database = null;\r\n\r\n        this.state = {\r\n            postList: [],\r\n            postMessage: \"\",\r\n            public: false,\r\n        };\r\n\r\n        this.onPost = this.onPost.bind(this);\r\n        this.onChangePost = this.onChangePost.bind(this);\r\n        this.onSetPrivacity = this.onSetPrivacity.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        const firebase_db = initFirebase(this.firebase, this.database);\r\n        this.firebase = firebase_db.firebase;\r\n        this.database = firebase_db.database;\r\n\r\n        let postsPromise = getPosts(this.firebase, this.database, {argument: \"public\", cmp: \"==\", value: true});\r\n        postsPromise.then(posts => {\r\n            this.setState({postList:posts});\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    onPost(){\r\n        console.log(\"posteando...\");\r\n        let user = firebase.auth().currentUser;\r\n        const today = Date.now();\r\n        const post = {\r\n            mail: user.email,\r\n            date: today,\r\n            message: this.state.postMessage,\r\n            public: this.state.public,\r\n            likes: 0\r\n        }\r\n        this.database.collection(\"posts\").doc(today.toString()).set(post);\r\n        \r\n        if (post.public) {\r\n            let newPostList = this.state.postList;\r\n            newPostList.unshift(post);\r\n            this.setState({ postList: newPostList });\r\n        }\r\n        this.setState({postMessage:\"\"}); \r\n    }\r\n\r\n    onChangePost(event) {\r\n        this.setState({ postMessage: event.target.value });\r\n    }\r\n\r\n    onSetPrivacity(event){\r\n        console.log(event.target.value);\r\n        this.setState({public: event.target.value === \"Public\"})\r\n    }\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar></Navbar>              \r\n                <div>\r\n                    <h1>Welcome to Home Page</h1>\r\n                    <textarea rows=\"4\" cols=\"50\" onChange={this.onChangePost} value= {this.state.postMessage}/> <br></br>\r\n                    <input type=\"radio\" name=\"privacity\" value=\"Public\" \r\n                        onChange={this.onSetPrivacity}/>Public\r\n                    <input type=\"radio\" name=\"privacity\" value=\"Friends\"\r\n                        onChange={this.onSetPrivacity}/>Friends\r\n                    <button onClick={this.onPost}>Post</button>\r\n                </div>\r\n                <div className=\"post-section\">\r\n                    <ul>\r\n                        {this.state.postList.map(post => {\r\n                            return <Post\r\n                                mail={post.mail}\r\n                                date={post.date}\r\n                                msg={post.message}\r\n                                public={post.public}\r\n                                likes ={post.likes}\r\n                                isEditable = {false}\r\n                                key={post.date}\r\n                            />;\r\n                        })}\r\n                    </ul>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n   \r\nexport default HomePage;\r\n","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport * as ROUTES from '../Constants/routes';\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n  };\r\n  \r\n  const ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\r\n  \r\n  const ERROR_MSG_ACCOUNT_EXISTS = `\r\n    An account with this E-Mail address already exists.\r\n    Try to login with this account instead. \r\n  `;\r\n\r\n    class SignUpPage extends React.Component{\r\n        constructor(props) {\r\n          super(props);\r\n          this.firebase = firebase;\r\n          this.state = { ...INITIAL_STATE };\r\n        }\r\n      \r\n        onSubmit = event => {\r\n          const { email, passwordOne} = this.state;\r\n          this.firebase.auth().createUserWithEmailAndPassword(email, passwordOne)\r\n            .then(() => {\r\n              this.setState({ ...INITIAL_STATE });\r\n              this.props.history.push(ROUTES.HOME_PAGE);\r\n            })\r\n            .catch(error => {\r\n              if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n                error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n              }\r\n      \r\n              this.setState({ error });\r\n            });\r\n      \r\n          event.preventDefault();\r\n        };\r\n      \r\n        onChange = event => {\r\n          this.setState({ [event.target.name]: event.target.value });\r\n        };\r\n      \r\n        onChangeCheckbox = event => {\r\n          this.setState({ [event.target.name]: event.target.checked });\r\n        };\r\n      \r\n        render() {\r\n          const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n          } = this.state;\r\n      \r\n          const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === '';\r\n      \r\n          return (\r\n            <div className=\"signup-page\">   \r\n            <form onSubmit={this.onSubmit}>\r\n              <input className = \"input-signup-username\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Full Name\"\r\n              />\r\n              <input className = \"input-signup-email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Email Address\"\r\n              />\r\n              <input className = \"input-signup-passwordOne\"\r\n                name=\"passwordOne\"\r\n                value={passwordOne}\r\n                onChange={this.onChange}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <input className = \"input-signup-passwordtwo\"\r\n                name=\"passwordTwo\" \r\n                value={passwordTwo}\r\n                onChange={this.onChange}\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n              /> <br></br>\r\n              <button className = \"signup-form-button\" disabled={isInvalid} type=\"submit\">\r\n                Sign Up\r\n              </button>\r\n      \r\n              {error && <p>{error.message}</p>}\r\n            </form>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\nexport default SignUpPage;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport Navbar from './Navbar';\r\nimport Post from './Post';\r\nimport {initFirebase, getPosts} from '../Utils/utilities';\r\n\r\nclass FriendsPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firebase = firebase;\r\n        this.database = null;\r\n\r\n        this.state = {postList:[]};\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        const firebase_db = initFirebase(this.firebase, this.database);\r\n        this.firebase = firebase_db.firebase;\r\n        this.database = firebase_db.database;\r\n\r\n        console.log(this.firebase.auth().currentUser);\r\n\r\n        let postsPromise = getPosts(this.firebase, this.database, {argument: \"public\", cmp: \"==\", value: false});\r\n        postsPromise.then(posts => {\r\n            this.setState({postList:posts});\r\n        }).catch(error => console.log(error));\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Navbar></Navbar>\r\n                </div>\r\n                <div>\r\n                    <h1>Welcome to Friends Page</h1>\r\n                </div>\r\n                <div className=\"post-section\">\r\n                    <ul>\r\n                        {this.state.postList.map(post => {\r\n                            return <Post\r\n                                mail={post.mail}\r\n                                date={post.date}\r\n                                msg={post.message}\r\n                                public={post.public}\r\n                                likes ={post.likes}\r\n                                key = {post.date}\r\n                            />;\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n   \r\nexport default FriendsPage;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport Navbar from './Navbar';\r\nimport Post from './Post';\r\nimport {initFirebase, getPosts} from '../Utils/utilities';\r\n\r\nclass  MyAccountPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.firebase = firebase;\r\n        this.database = null;\r\n\r\n        this.state = {postList:[],\r\n                      user: null };\r\n        this.onDelete = this.onDelete.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){  \r\n        const firebase_db = initFirebase(this.firebase, this.database);\r\n        this.firebase = firebase_db.firebase;\r\n        this.database = firebase_db.database;\r\n\r\n        \r\n\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(user){\r\n                this.setState({ user: user });\r\n                let postsPromise = getPosts(this.firebase, \r\n                    this.database, \r\n                    {argument: \"mail\", cmp: \"==\", value: this.state.user.email});\r\n        \r\n                postsPromise.then(posts => {\r\n                    this.setState({postList:posts});\r\n                }).catch(error => console.log(error));\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onDelete(id){\r\n        let newPostList = this.state.postList;\r\n        let index= newPostList.findIndex((elemen)=>{\r\n            return id === elemen.date;\r\n        });\r\n        // Deletes elemen at position index\r\n        newPostList.splice(index,1);\r\n        this.setState({postList: newPostList});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Navbar></Navbar>\r\n                </div>\r\n                <div>\r\n                    <h1>Welcome to your Account</h1>\r\n                </div>\r\n                <div className=\"post-section\">\r\n                    <ul>\r\n                        {this.state.postList.map(post => {\r\n                            return <Post\r\n                                mail={post.mail}\r\n                                date={post.date}\r\n                                msg={post.message}\r\n                                public={post.public}\r\n                                likes ={post.likes}\r\n                                isEditable = {true}\r\n                                deleteFunc = {this.onDelete}\r\n                                key = {post.date}\r\n                            />;\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n   \r\nexport default MyAccountPage;","import React from 'react';\nimport firebase from 'firebase';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport './Components/Navbar.css';\nimport './Components/LoginPage.css';\nimport LoginPage from './Components/LoginPage';\nimport HomePage from './Components/HomePage';\nimport SignUpPage from './Components/SignUpPage';\nimport FriendsPage from './Components/FriendsPage';\nimport MyAccountPage from './Components/MyAccountPage';\nimport * as ROUTES from './Constants/routes';\nimport * as CONFIG from './Constants/config';\n\nclass App extends React.Component {\n\n  componentDidMount(){\n    // if firebase app not initialized, then initialize\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp(CONFIG.firebaseConfig);\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <HashRouter>     \n          <div>\n            <Route exact path=\"/\" component={LoginPage}></Route>\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage}></Route>\n            <Route path= {ROUTES.HOME_PAGE} component={HomePage}></Route>\n            <Route path= {ROUTES.FRIENDS_PAGE} component={FriendsPage}></Route>\n            <Route path= {ROUTES.MY_ACCOUNT_PAGE} component={MyAccountPage}></Route>\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}